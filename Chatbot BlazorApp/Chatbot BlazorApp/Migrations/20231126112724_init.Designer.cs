// <auto-generated />
using Chatbot_BlazorApp_Share.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatbotBlazorApp.Migrations
{
    [DbContext(typeof(ChatbotContext))]
    [Migration("20231126112724_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Chatbot_BlazorApp_Share.Entity.Contents", b =>
                {
                    b.Property<int>("ContentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContentID"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContentID");

                    b.ToTable("Contents");
                });

            modelBuilder.Entity("Chatbot_BlazorApp_Share.Entity.Keywords", b =>
                {
                    b.Property<int>("KeywordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KeywordID"));

                    b.Property<string>("Keyword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.Property<string>("KeywordNotToneMarks")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.Property<int>("SplitContentID")
                        .HasColumnType("int");

                    b.HasKey("KeywordID");

                    b.HasIndex("SplitContentID");

                    b.HasIndex("Keyword", "KeywordNotToneMarks");

                    b.ToTable("Keywords");
                });

            modelBuilder.Entity("Chatbot_BlazorApp_Share.Entity.SplitContents", b =>
                {
                    b.Property<int>("SplitContentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SplitContentID"));

                    b.Property<int>("ContentID")
                        .HasColumnType("int");

                    b.Property<string>("SplitContent")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar");

                    b.HasKey("SplitContentID");

                    b.HasIndex("ContentID");

                    b.ToTable("SplitContents");
                });

            modelBuilder.Entity("Chatbot_BlazorApp_Share.Entity.Keywords", b =>
                {
                    b.HasOne("Chatbot_BlazorApp_Share.Entity.SplitContents", "SplitContents")
                        .WithMany("KeyWords")
                        .HasForeignKey("SplitContentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SplitContents");
                });

            modelBuilder.Entity("Chatbot_BlazorApp_Share.Entity.SplitContents", b =>
                {
                    b.HasOne("Chatbot_BlazorApp_Share.Entity.Contents", "Content")
                        .WithMany("SplitContents")
                        .HasForeignKey("ContentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Content");
                });

            modelBuilder.Entity("Chatbot_BlazorApp_Share.Entity.Contents", b =>
                {
                    b.Navigation("SplitContents");
                });

            modelBuilder.Entity("Chatbot_BlazorApp_Share.Entity.SplitContents", b =>
                {
                    b.Navigation("KeyWords");
                });
#pragma warning restore 612, 618
        }
    }
}
